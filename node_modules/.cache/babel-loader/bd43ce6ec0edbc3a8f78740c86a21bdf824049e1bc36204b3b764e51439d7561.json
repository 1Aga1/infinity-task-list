{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dpopo\\\\Documents\\\\GitHub\\\\infinity-task-list\\\\src\\\\components\\\\TaskList\\\\TaskList.tsx\";\nimport React from 'react';\nimport tasks from \"../../store/Task\";\nimport TaskListItem from \"../TaskListItem/TaskListItem\";\nimport { observer } from \"mobx-react-lite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.tasks.map(task => /*#__PURE__*/_jsxDEV(TaskListItem, {\n      id: task.id,\n      name: task.name,\n      description: task.description,\n      parentTask: task.parentTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n};\n_c = TaskList;\nexport default _c2 = observer(TaskList);\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","tasks","TaskListItem","observer","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","children","map","task","id","name","description","parentTask","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["C:/Users/Dpopo/Documents/GitHub/infinity-task-list/src/components/TaskList/TaskList.tsx"],"sourcesContent":["import React from 'react';\r\nimport tasks from \"../../store/Task\";\r\nimport TaskListItem from \"../TaskListItem/TaskListItem\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst TaskList = () => {\r\n    return (\r\n        <>\r\n            {\r\n                tasks.tasks.map(task =>\r\n                    <TaskListItem id={task.id}\r\n                                  name={task.name}\r\n                                  description={task.description}\r\n                                  parentTask={task.parentTask}\r\n                    >\r\n\r\n                    </TaskListItem>)\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default observer(TaskList);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAAQC,QAAQ,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAEQR,KAAK,CAACA,KAAK,CAACS,GAAG,CAACC,IAAI,iBAChBN,OAAA,CAACH,YAAY;MAACU,EAAE,EAAED,IAAI,CAACC,EAAG;MACZC,IAAI,EAAEF,IAAI,CAACE,IAAK;MAChBC,WAAW,EAAEH,IAAI,CAACG,WAAY;MAC9BC,UAAU,EAAEJ,IAAI,CAACI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG5B,CAAC;EAAC,gBAE1B,CAAC;AAEX,CAAC;AAACC,EAAA,GAfIZ,QAAQ;AAiBd,eAAAa,GAAA,GAAelB,QAAQ,CAACK,QAAQ,CAAC;AAAC,IAAAY,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}