{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dpopo\\\\Documents\\\\GitHub\\\\infinity-task-list\\\\src\\\\components\\\\TaskListItem\\\\TaskListItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport tasks from \"../../store/Tasks\";\nimport style from './TaskListItem.module.scss';\nimport { Checkbox } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskListItem = _ref => {\n  _s();\n  let {\n    task,\n    childrenStyle\n  } = _ref;\n  const [childrenList, setChildrenList] = useState();\n  useEffect(() => {\n    setChildrenList(tasks.getChildrenTaskList(task.id));\n  }, [tasks.tasks, tasks.selectedTasks]);\n  const onCheck = e => {\n    if (e.target.checked) tasks.selectTask(task.id);else tasks.deselectTask(task.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: childrenStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.task,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        onChange: onCheck,\n        checked: !!tasks.selectedTasks.find(selectedTask => selectedTask.id === task.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: childrenList ? childrenList.map(childrenTask => /*#__PURE__*/_jsxDEV(TaskListItem, {\n        task: childrenTask,\n        childrenStyle: {\n          margin: '5px 0 5px 10px'\n        }\n      }, childrenTask.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }, this)) : null\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskListItem, \"w+q2+ieQrdsbXfnYeMXfVwEdc/Y=\");\n_c = TaskListItem;\nexport default TaskListItem;\nvar _c;\n$RefreshReg$(_c, \"TaskListItem\");","map":{"version":3,"names":["React","useEffect","useState","tasks","style","Checkbox","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskListItem","_ref","_s","task","childrenStyle","childrenList","setChildrenList","getChildrenTaskList","id","selectedTasks","onCheck","e","target","checked","selectTask","deselectTask","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","onChange","find","selectedTask","map","childrenTask","margin","_c","$RefreshReg$"],"sources":["C:/Users/Dpopo/Documents/GitHub/infinity-task-list/src/components/TaskListItem/TaskListItem.tsx"],"sourcesContent":["import React, {FC, useEffect, useState} from 'react';\r\nimport {ITaskListItemProps} from \"./ITaskListItemProps\";\r\nimport {ITask} from \"../../type/task\";\r\nimport tasks from \"../../store/Tasks\";\r\nimport style from './TaskListItem.module.scss'\r\nimport { Checkbox } from 'antd';\r\nimport type { CheckboxChangeEvent } from 'antd/es/checkbox';\r\n\r\nconst TaskListItem: FC<ITaskListItemProps> = ({task, childrenStyle}) => {\r\n    const [childrenList, setChildrenList] = useState<ITask[]>();\r\n\r\n    useEffect(() => {\r\n        setChildrenList(tasks.getChildrenTaskList(task.id))\r\n    }, [tasks.tasks, tasks.selectedTasks])\r\n\r\n    const onCheck = (e: CheckboxChangeEvent) => {\r\n        if (e.target.checked) tasks.selectTask(task.id)\r\n        else tasks.deselectTask(task.id);\r\n    }\r\n\r\n    return (\r\n        <div style={childrenStyle}>\r\n            <div className={style.task}>\r\n                <p>{task.name}</p>\r\n                <Checkbox onChange={onCheck}\r\n                          checked={!!tasks.selectedTasks.find(selectedTask => selectedTask.id === task.id)}\r\n                ></Checkbox>\r\n            </div>\r\n            <>\r\n                {\r\n                    childrenList\r\n                        ?\r\n                        childrenList.map(childrenTask =>\r\n                            <TaskListItem task={childrenTask} childrenStyle={{margin: '5px 0 5px 10px'}} key={childrenTask.id}/>\r\n                        )\r\n                        : null\r\n                }\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskListItem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAOC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAGpD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,SAASC,QAAQ,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGhC,MAAMC,YAAoC,GAAGC,IAAA,IAA2B;EAAAC,EAAA;EAAA,IAA1B;IAACC,IAAI;IAAEC;EAAa,CAAC,GAAAH,IAAA;EAC/D,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAU,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACZe,eAAe,CAACb,KAAK,CAACc,mBAAmB,CAACJ,IAAI,CAACK,EAAE,CAAC,CAAC;EACvD,CAAC,EAAE,CAACf,KAAK,CAACA,KAAK,EAAEA,KAAK,CAACgB,aAAa,CAAC,CAAC;EAEtC,MAAMC,OAAO,GAAIC,CAAsB,IAAK;IACxC,IAAIA,CAAC,CAACC,MAAM,CAACC,OAAO,EAAEpB,KAAK,CAACqB,UAAU,CAACX,IAAI,CAACK,EAAE,CAAC,MAC1Cf,KAAK,CAACsB,YAAY,CAACZ,IAAI,CAACK,EAAE,CAAC;EACpC,CAAC;EAED,oBACIX,OAAA;IAAKH,KAAK,EAAEU,aAAc;IAAAY,QAAA,gBACtBnB,OAAA;MAAKoB,SAAS,EAAEvB,KAAK,CAACS,IAAK;MAAAa,QAAA,gBACvBnB,OAAA;QAAAmB,QAAA,EAAIb,IAAI,CAACe;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBzB,OAAA,CAACF,QAAQ;QAAC4B,QAAQ,EAAEb,OAAQ;QAClBG,OAAO,EAAE,CAAC,CAACpB,KAAK,CAACgB,aAAa,CAACe,IAAI,CAACC,YAAY,IAAIA,YAAY,CAACjB,EAAE,KAAKL,IAAI,CAACK,EAAE;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACNzB,OAAA,CAAAE,SAAA;MAAAiB,QAAA,EAEQX,YAAY,GAERA,YAAY,CAACqB,GAAG,CAACC,YAAY,iBACzB9B,OAAA,CAACG,YAAY;QAACG,IAAI,EAAEwB,YAAa;QAACvB,aAAa,EAAE;UAACwB,MAAM,EAAE;QAAgB;MAAE,GAAMD,YAAY,CAACnB,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACvG,CAAC,GACC;IAAI,gBAEhB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd,CAAC;AAACpB,EAAA,CAhCIF,YAAoC;AAAA6B,EAAA,GAApC7B,YAAoC;AAkC1C,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}