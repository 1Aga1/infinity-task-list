{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dpopo\\\\Documents\\\\GitHub\\\\infinity-task-list\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Card, Col, message, Row } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport TaskModal from \"./components/TaskModal/TaskModal\";\nimport tasks from \"./store/Tasks\";\nimport { observe } from \"mobx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [createModalOpen, setCreateModalOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const createNewTask = async data => {\n    setLoading(true);\n    try {\n      tasks.addTask(data);\n      setCreateModalOpen(false);\n    } catch (e) {\n      message.error('Ошибка добавления задачи!');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '100%',\n        maxHeight: '80vh',\n        margin: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [20, 20],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447\",\n            actions: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setCreateModalOpen(true),\n              icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 35\n              }, this),\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0430 \\u21161\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskModal, {\n      open: createModalOpen,\n      loading: loading,\n      onCancel: () => setCreateModalOpen(false),\n      onFinish: createNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"LDjckgd0UmfiGKM1zyA5VOML46U=\");\n_c = App;\nexport default _c2 = observe(App);\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","Button","Card","Col","message","Row","EditOutlined","TaskModal","tasks","observe","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","createModalOpen","setCreateModalOpen","loading","setLoading","createNewTask","data","addTask","e","error","children","style","width","maxHeight","margin","gutter","xs","lg","title","actions","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","open","onCancel","onFinish","_c","_c2","$RefreshReg$"],"sources":["C:/Users/Dpopo/Documents/GitHub/infinity-task-list/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {Button, Card, Col, message, Row} from \"antd\";\nimport {EditOutlined} from \"@ant-design/icons\";\nimport TaskModal from \"./components/TaskModal/TaskModal\";\nimport {ITaskForm} from \"./type/task\";\nimport tasks from \"./store/Tasks\";\nimport {observe} from \"mobx\";\n\n\nfunction App() {\n    const [createModalOpen, setCreateModalOpen] = useState<boolean>(false);\n    const [loading, setLoading] = useState<boolean>(false);\n\n    const createNewTask = async (data: ITaskForm) => {\n        setLoading(true);\n        try {\n            tasks.addTask(data);\n            setCreateModalOpen(false);\n        } catch (e) {\n            message.error('Ошибка добавления задачи!');\n        }\n        setLoading(false);\n    }\n\n    return (\n        <>\n            <Card style={{width: '100%', maxHeight: '80vh', margin: '20px'}}>\n                <Row gutter={[20, 20]}>\n                    <Col xs={24} lg={12}>\n                        <Card title='Список задач' actions={[\n                            <Button\n                            onClick={() => setCreateModalOpen(true)}\n                            icon={<EditOutlined/>}>Добавить задачу</Button>\n                        ]}>{}</Card>\n                    </Col>\n                    <Col xs={24} lg={12}>\n                        <Card title='Задача №1'>\n                        </Card>\n                    </Col>\n                </Row>\n            </Card>\n\n            <TaskModal\n                open={createModalOpen}\n                loading={loading}\n                onCancel={() => setCreateModalOpen(false)}\n                onFinish={createNewTask}\n            />\n        </>\n    );\n}\n\nexport default observe(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}